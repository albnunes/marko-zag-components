import * as tree from "@zag-js/tree-view";
import { normalizeProps } from "marko-zag/dist/normalize-props";

export type Input = (tree.Context & {
  renderBody: Marko.Body<[tree.Api<any>]>;
  labelText: string
}
);

<const/machine=(
  () =>{
    return tree.machine({
      id: input.id,
    }) 
  }
)/> 

<use-machine/[machineState, send] machine=machine as any/>

<const/api=tree.connect(machineState, send, normalizeProps as any)/>

<return=api/>
<div ...api.rootProps>
          <h3 ...api.labelProps>${input.labelText}</h3>
          <div>
            <button onClick(){api.collapseAll()}>Collapse All</button>
            <button onClick(){api.expandAll()}>Expand All</button>
            <button onClick(){api.selectAll()}>Select All</button>
            <button onClick(){api.deselectAll()}>Deselect All</button>
          </div>

    <ul ...api.treeProps>
        <${input.renderBody}=[api]/>
    </ul>
</div>





