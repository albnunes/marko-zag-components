import * as tree from "@zag-js/tree-view";
import openVisible from "../../../../assets/openVisible.svg";
import closeVisible from "../../../../assets/closeVisible.svg";
import openLock from "../../../../assets/openLock.svg";
import closeLock from "../../../../assets/closeLock.svg";
import mixedIcon from "../../../../assets/mixed.svg";
export type Input = ( {
    renderBody?: Marko.Body<[tree.Api<any>]>;
    // api: tree.Api
    branchProps: {
    depth: number;
    id: string;
    disabled?: boolean;
    }
    name:string
}
);

<get/api="Tree"/>
<get/father="../Branch/TreeBranch.marko"/>
<let/hidden=false/>
<let/locked=false/>
<let/mixed=false/>
<!-- Do whatever you need with the context here -->
<!-- Active Coupon: ${coupon}. -->
<${console.log("tree Item api", api)}/>
<div class={
    locked,
    hidden,
}>
    <li ...api.getItemProps(input.branchProps)>
        <div class="item-control-icons">
            ${input.name}

            <div class="icon-container">
                <if=((father && !father.hidden && !father.mixed) || !father)>
                    ${mixed = false}
                    <img
                        src=(hidden ? closeVisible : openVisible)
                        onClick(event) {
                            event.stopPropagation();
                            hidden = !hidden;
                            console.log("PROPS INSIDE THE HIDDEN", event);
                        }
                    >
                </if>
                <else>
                    ${mixed = true}
                    <img
                        src=mixedIcon
                        onClick(event) { event.stopPropagation(); }
                    >
                </else>
                <if=((father && !father.locked && !father.mixed) || !father)>
                    ${mixed = false}
                    <img
                        src=(locked ? closeLock : openLock)
                        onClick(event) {
                            event.stopPropagation();
                            console.log("click here")
                            locked = !locked;
                        }
                    >
                </if>
                <else>
                        ${mixed = true}
                    <img
                        src=mixedIcon
                        onClick(event) { event.stopPropagation(); }
                    >
                </else>
                <!-- <if=father && !father.locked && !father.hidden && mixed>
                        ${(mixed = false)}
                    </if> -->
            </div>
            <!-- ${console.log("icon props",iconProps)} -->
        </div>
    </li>
</div>
<!-- <${input.renderBody}=[input.api]/> -->
<style>
    .item-control-icons {
        display: flex; /* This ensures the span and the div with images are side by side */
        align-items: center; /* Centers them vertically */
    }
</style>
